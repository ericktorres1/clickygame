{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","cards","game","_this","setState","console","log","this","forEach","card","count","alert","concat","find","o","i","sort","Math","random","gameOver","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qxFAWeA,SARF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCDxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SATA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMe,MADhB,eACmCf,EAAMgB,qBCyD9BC,oNAxDbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAGbI,KAAO,WAaL,OAZGC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,WAC/BK,EAAKC,SAAS,CAACN,UAAWK,EAAKH,MAAMH,OAAQ,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMF,aAI3BK,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAGfC,MAAK,uBAAAC,OAAwBT,EAAKH,MAAMH,QACxCM,EAAKC,SAAS,CAACP,MAAO,KACf,KAGTT,WAAa,SAAAC,GACZc,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GACxB,GAAGD,EAAEzB,IAAMA,EAAI,CACb,GAAsB,IAAnBY,EAAMc,GAAGL,MAMV,OALAT,EAAMc,GAAGL,MAAQT,EAAMc,GAAGL,MAAQ,EAClCP,EAAKC,SAAS,CAACP,MAAQM,EAAKH,MAAMH,MAAQ,GAAI,WAC5CQ,QAAQC,IAAIC,KAAKP,MAAMH,SAEzBM,EAAKH,MAAMC,MAAMe,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPf,EAAKgB,uFAKH,IAAAC,EAAAb,KACP,OACExB,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAQzB,MAAOU,KAAKP,MAAMH,MAAOC,UAAWS,KAAKP,MAAMF,WAAvD,cACCS,KAAKP,MAAMC,MAAMsB,IAAI,SAAAd,GAAI,OACxB1B,EAAAC,EAAAC,cAACuC,EAAD,CACEpC,WAAYgC,EAAKhC,WACjBC,GAAIoB,EAAKpB,GACToC,IAAKhB,EAAKpB,GACVI,MAAOgB,EAAKhB,kBAhDNiC,cCFlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.db608e7a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    cards, \n    score: 0,\n    highscore: 0\n  };\n\n  game = () => {\n    if(this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n\n    this.state.cards.forEach(card => {\n      card.count = 0; \n    });\n\n    alert(`Game over! \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n   this.state.cards.find((o, i) => {\n     if(o.id == id) {\n       if(cards[i].count === 0) {\n         cards[i].count = cards[i].count + 1;\n         this.setState({score : this.state.score + 1}, function() {\n           console.log(this.state.score);\n         });\n         this.state.cards.sort(() => Math.random() - 0.5)\n         return true;\n       } else {\n         this.gameOver();\n       }\n     }\n   });\n  }\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Click Game</Header>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n            />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n       \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}